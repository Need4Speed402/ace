;;" 
  " In many programming languages, the use of parenthesis '()' where
  " only really used for specifiying to the compiler exactly in which order
  " you wanted your code to run, this is of course based off of western
  " mathimatical notation.
  " 
  " In ace, the use of parenthesis signify a scope. Scopes are no more
  " complicated then imediately invoked functions where they can support
  " multi expression procedures, and its own variable scope.
"`"

(Function Scope) { Function resolve {
	Function compare {
		Function scope {
			scope scope (Function ctx {resolve (resolve ctx)})
		} (Function scope {Function handler {Function body {
			body (Function context {
				(compare (resolve context) ``) {
					Function next {Function current {
						(compare (resolve current) `) {
							scope scope (Function ctx {resolve (resolve ctx)}) next
						} {(compare (resolve current) =) {
							scope scope (resolve (resolve current)) next
						} {
							resolve (resolve current)
						}}
					}}
				} {(compare (resolve context) `) {
					Function null {
						null null
					} (Function null {Function void {(Function `) {} (
						null null
					)}})
				} {
					Function setctx {
						(compare (resolve setctx) .`) {
							Function setctx {
								(compare (resolve setctx) =) {
									Function value {
										(Function =) {=} (Function setctx {
											compare (resolve setctx) (resolve context) {
												resolve (resolve value)
											} {
												resolve (resolve setctx)
											}
										})
									}
								} {
									handler (resolve context) (resolve setctx)
								}
							}
						} {
							handler (resolve context) (resolve setctx)
						}
					}
				}}
			})
		}}})
	} (Function first {Function second {
		Function true {Function false {
			Scope (unsafe identifier compare (resolve first) (resolve second) true false)
		}}
	}})
} (unsafe identifier resolve) } (unsafe root Scope)