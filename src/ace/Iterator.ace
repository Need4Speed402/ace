Class {
	:this for {{
		$cb = .
		$loop = {{
			$index = .
			
			.. {{
				cb (Object {
					:this index {index}
					..
				})
				
				loop . (index + 1)
			}}
		}}
		
		loop : 0
	}}
	
	:this backing {:}
	
	:this first {:{{..}}}
	:this rest {Iterator :{{.}}}
	:this empty {:{{false}}; true}
	
	:this zip {{
		$zip = {{
			..empty & .empty !? {
				{. [...first; ..first] (zip ...rest ..rest)}
			}
		}}
		
		Iterator (zip :this .)
	}}
	
	:this + {{
		$add = .backing
		$walk = {
			. {{
				{. ... (walk ..)}
			}}
			
			add
		}
		
		Iterator (walk :)
	}}
	
	:this map {{
		$fn = .
		
		$walk = {
			. {{
				{
					. (fn ...) (walk ..)
				}
			}}
		}
		
		Iterator (walk :) 
	}}
	
	:this filter {{
		$fn = .
		
		$walk = {
			. {{
				fn .. ? {
					{. ... (walk ..)}
				}
				
				walk .
			}}
		}
		
		Iterator (walk :)
	}}
	
	:this length {
		$loop = {
			. {{
				1 + loop .
			}}
		}
		
		loop :
	}
	
	:this array {
		Array :this
	}
	
	:this clone {
		$walk = {
			. {{
				$next = walk .
				$value = ..
				
				{. value next}
			}}
		}
		
		Iterator (walk :)
	}
}